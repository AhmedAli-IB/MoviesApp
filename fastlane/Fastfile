# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do


  lane :register_app do
    produce
  end

  desc "Sync team Code-Signing assets"
  lane :sync_signing_assets do |options|
    selectedType = options[:type]
    identifier = options[:app_identifier]

    match(type: selectedType, app_identifier: identifier)
  end

  desc "Build for App Store submission"
  lane :build_appstore do
    #install cocapods

    cocoapods(clean_install: true)

    # install certificates

    sync_signing_assets(type: "appstore", app_identifier: "com.example.MoviesApp-Test")

    #  increment build number
    increment_build_number

    # archive app using gym
    gym(
      output_directory: "build_AppStore",
      export_method: "app-store"
      )

     #take app screen shots
    snapshot
  end

  desc "Build for Ad Hoc submission"
  lane :build_adhoc do
    #install cocapods

    cocoapods(clean_install: true)

    # install certificates

    sync_signing_assets(type: "adhoc", app_identifier: "com.example.MoviesApp-Test")


    # archive app using gym
    gym(
    output_directory: "build_AdHoc",
    export_method: "ad-hoc"
    )
    #  increment build number
    increment_build_number

    #take app screen shots
    snapshot

    firebase_app_distribution(
      firebase_cli_token: "1//03Fg0UN_-MZlDCgYIARAAGAMSNwF-L9IrbzeKUHjyTllyEhu1V77Qmp3t5roU9YGu1TFN-TxFsx_RJwZelrRauZnhpdzhOrU6o3A",
      app: "1:737588339038:ios:dde1af2a86526481976fcf",
      testers: "ahmed.amen@ibtikar.net.sa",
      release_notes: "Lots of amazing new features to test out for movie üçø"
  )

    end


    desc "precheck for meta data and violations rules"
    lane :check_metadata do
      precheck
    end

    desc "upload ipa version to upload_testflight testflight" 
    lane :upload_testflight do 
         # call pilot
          pilot(
                  app_platform: 'ios',
                  ipa: "build_AppStore/MoviesApp.ipa"
                )
    end


    desc "deliver uploads screenshots, metadata and binaries to App Store Connect. Use deliver to submit your app for App Store review."
    lane :submit_app do
      deliver(
        ipa: "build_AppStore/MoviesApp.ipa",
        submit_for_review: true,
        force: true
      )
    end
end
